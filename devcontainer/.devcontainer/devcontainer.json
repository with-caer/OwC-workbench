{
    "build": {
        "dockerfile": "./Dockerfile",

        // Build devcontainer from the root directory
        "context": "../.."
    },
    
    "customizations": {
        "vscode": {
            "extensions": [
                "rust-lang.rust-analyzer",
                "tamasfe.even-better-toml"
            ],
            "settings": {
                "files.watcherExclude": {
                    "**/target/**": true
                },

                "window.autoDetectColorScheme": true,
                "window.autoDetectHighContrast": false,
            
                "workbench.preferredDarkColorTheme": "Monokai",
                "workbench.preferredLightColorTheme": "Quiet Light",
                "workbench.colorTheme": "Quiet Light",
                "workbench.startupEditor": "none",
                "workbench.editor.enablePreview": false,
                "workbench.activityBar.location": "top",
                
                "editor.wordWrap": "on",
                "editor.fontFamily": "Inconsolata, Menlo, Monaco, 'Courier New', monospace",
                "editor.fontSize": 15,
                "editor.fontLigatures": true,
                "editor.cursorStyle": "underline",
                "editor.minimap.enabled": false,
                
                "terminal.integrated.cursorBlinking": true,
                "terminal.integrated.cursorStyle": "underline",
                "terminal.integrated.localEchoEnabled": "on",
                "terminal.integrated.localEchoStyle": "bold",
                "terminal.integrated.localEchoLatencyThreshold": 10,

                // Disabling cache priming can speed up the first-time
                // start tie of Rust Analyzer, sometimes, at the expense
                // of more RAM used.
                "rust-analyzer.cachePriming.enable": false,

                // Enabling will cause Rust Analyzer to store compiled
                // artifacts in their own directory. While this behavior
                // effectively doubles storage use, it means that Rust
                // Analyzer won't conflict with manual invocations of `cargo`.
                "rust-analyzer.cargo.targetDir": true
            }
        }
    }
}